{"version":3,"sources":["img/dark.jpeg","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","gameHelper.js","hooks/useStage.js","hooks/useGameStatus.js","components/styles/StyledTetris.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledCell","styled","div","props","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","length","React","memo","StyledStage","height","width","Stage","stage","map","row","cell","index","key","StyledDisplay","gameOver","Display","text","StyledStartButton","StartButton","callback","onClick","createStage","Array","from","fill","checkCollision","player","moveX","x","moveY","y","tetromino","pos","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledTetrisWrapper","bgImage","StyledTetris","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","startGame","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","event","onKeyUp","style","textAlign","fontSize","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65788feb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dark.bdf4302c.jpeg\";","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n    width: auto;\r\n    background: rgba(${props => props.color}, 0.8);\r\n    border: ${props => (props.type===0 ? '0px solid' : '4px solid')};\r\n    border-bottom-color: rgba(${props => props.color}, 0.1);\r\n    border-right-color: rgba(${props => props.color}, 1);\r\n    border-top-color: rgba(${props => props.color}, 1);\r\n    border-left-color: rgba(${props => props.color}, 0.3);\r\n`\r\n","export const TETROMINOS = {\r\n    0: { shape: [[0]], color: '0, 0, 0' },\r\n    I: {\r\n        shape: [\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n            [0, 'I', 0, 0],\r\n        ],\r\n        color: '80, 227, 330'\r\n    },\r\n    J: {\r\n        shape: [\r\n            [0, 'J', 0],\r\n            [0, 'J', 0],\r\n            ['J', 'J', 0],\r\n        ],\r\n        color: '36, 95, 223'\r\n    },\r\n    L: {\r\n        shape: [\r\n            [0, 'L', 0],\r\n            [0, 'L', 0],\r\n            [0, 'L', 'L'],\r\n        ],\r\n        color: '223, 173, 36'\r\n    },\r\n    O: {\r\n        shape: [\r\n            ['O', 'O'],\r\n            ['O', 'O'],\r\n        ],\r\n        color: '223, 217,36'\r\n    },\r\n    S: {\r\n        shape: [\r\n            [0, 'S', 'S'],\r\n            ['S', 'S', 0],\r\n            [0, 0, 0],\r\n        ],\r\n        color: '48, 211, 56'\r\n    },\r\n    T: {\r\n        shape: [\r\n            [0, 0, 0],\r\n            ['T', 'T', 'T'],\r\n            [0, 'T', 0],\r\n        ],\r\n        color: '132, 61, 198'\r\n    },\r\n    Z: {\r\n        shape: [\r\n            ['Z', 'Z', 0],\r\n            [0, 'Z', 'Z'],\r\n            [0, 0, 0],\r\n        ],\r\n        color: '227, 78, 78'\r\n    }\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n    return TETROMINOS[randTetromino];\r\n}","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nfunction Cell({ type }) {\r\n    return (\r\n        <StyledCell type={type} color={TETROMINOS[type].color} />\r\n    )\r\n}\r\n\r\nexport default React.memo(Cell);","import styled from \"styled-components\";\r\n\r\nexport const StyledStage = styled.div`\r\n    display: grid;\r\n    grid-template-rows: repeat(\r\n        ${props => props.height},\r\n        calc(25vw/ ${props => props.width})\r\n    );\r\n    grid-template-columns: repeat(${props => props.width}, 1fr);\r\n    grid-gap: 1px;\r\n    border: 2px solid #333;\r\n    width: 100%;\r\n    max-width: 25vw;\r\n    background: #111;\r\n\r\n    @media (max-width: 450px){\r\n        grid-template-rows: repeat(\r\n            ${props => props.height},\r\n            calc(50vw/ ${props => props.width})\r\n        );\r\n        grid-template-columns: repeat(${props => props.width}, 1fr);\r\n        max-width: 50vw;\r\n    }\r\n`","import React from 'react';\r\nimport Cell from \"./Cell\";\r\nimport { StyledStage } from \"./styles/StyledStage\"\r\n\r\nfunction Stage({ stage }) {\r\n    return (\r\n        <StyledStage width={stage[0].length} height={stage.length}>\r\n            { stage.map( row => (\r\n                row.map((cell, index) => (\r\n                    <Cell key={index} type={cell[0]} />\r\n                ))\r\n            ))}\r\n        </StyledStage>\r\n    )\r\n}\r\n\r\nexport default Stage\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDisplay = styled.div`\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 0 20px 0;\r\n    padding: 15px;\r\n    border: 2px solid #333;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    color: ${props => (props.gameOver ? 'red' : '#999')};\r\n    background: #000;\r\n    font-size: 1rem;\r\n`","import React from 'react';\r\nimport {StyledDisplay} from \"./styles/StyledDisplay\";\r\n\r\nfunction Display({ gameOver, text}) {\r\n    return (\r\n        <StyledDisplay gameOver={gameOver}>\r\n            {text}\r\n        </StyledDisplay>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledStartButton = styled.div`\r\n    box-sizing: border-box;\r\n    margin: 0 0 20px 0;\r\n    padding: 15px;\r\n    text-align: center;\r\n    min-height: 30px;\r\n    width: 100%;\r\n    border: none;\r\n    color: white;\r\n    background: #333;\r\n    font-size: 1rem;\r\n    outline: none;\r\n    cursor: pointer;\r\n`","import React from 'react';\r\nimport { StyledStartButton } from \"./styles/StyledStartButton\";\r\n\r\nfunction StartButton({ callback }) {\r\n    return (\r\n        <StyledStartButton onClick={callback}>\r\n            Start Game\r\n        </StyledStartButton>\r\n    )\r\n}\r\n\r\nexport default StartButton\r\n","export const STAGE_WIDTH=12;\r\nexport const STAGE_HEIGHT=20;\r\n\r\nexport const createStage = () => {\r\n    const arr = Array.from(Array(STAGE_HEIGHT), () => (\r\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n    ));\r\n    return arr;\r\n}\r\n\r\nexport const checkCollision = (player, stage, {x: moveX, y: moveY}) => {\r\n    for(let y=0; y < player.tetromino.length; y+=1){\r\n        for(let x=0; x < player.tetromino[y].length; x+=1){\r\n            if(player.tetromino[y][x]!==0){\r\n                if(!stage[y + player.pos.y + moveY] || !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] || stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelper';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n    const [stage, setStage] = useState(createStage());\r\n    const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setRowsCleared(0);\r\n\r\n        const sweepRows = newStage => (\r\n            newStage.reduce((ack, row) => {\r\n                if(row.findIndex(cell => cell[0] === 0) === -1){\r\n                    setRowsCleared(prev => prev+1);\r\n                    ack.unshift(new Array(newStage[0].length).fill([0,'clear']));\r\n                    return ack;\r\n                }\r\n                ack.push(row);\r\n                return ack;\r\n            },[])\r\n        )\r\n\r\n        const updateStage = prevStage => {\r\n            const newStage = prevStage.map(row => row.map(cell => (cell[1]==='clear' ? [0,'clear'] : cell)));\r\n\r\n            player.tetromino.forEach((row,y) => {\r\n                row.forEach((value,x) => {\r\n                    if(value !==0){\r\n                        newStage[y + player.pos.y][x + player.pos.x] = [\r\n                            value,\r\n                            `${player.collided ? 'merged' : 'clear'}`\r\n                        ]\r\n                    }\r\n                })\r\n            });\r\n\r\n            if(player.collided){\r\n                resetPlayer();\r\n                return sweepRows(newStage);\r\n            }\r\n\r\n            return newStage;\r\n        }\r\n\r\n        setStage( prev => updateStage(prev));\r\n    },[player, resetPlayer]);\r\n\r\n    return [stage, setStage, rowsCleared];\r\n}","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0);\r\n    const [level, setLevel] = useState(0);\r\n\r\n    const linePoints = [40,100,300,1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        if(rowsCleared > 0){\r\n            setScore(prev => prev + linePoints[rowsCleared-1] * (level + 1));\r\n            setRows(prev => prev + rowsCleared);\r\n        }\r\n    },[level, linePoints, rowsCleared]);\r\n\r\n    useEffect(() => {\r\n        calcScore();\r\n    },[calcScore, rowsCleared, score]);\r\n\r\n    return [score, setScore, rows, setRows, level, setLevel];\r\n}","import styled from \"styled-components\";\r\nimport bgImage from \"../../img/dark.jpeg\";\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: url(${bgImage}) #000;\r\n    backgorund-size: cover;\r\n    overflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n    padding: 40px;\r\n    margin: 0 auto;\r\n    max-width: 900px;\r\n\r\n    aside {\r\n        width: 100%;\r\n        max-width: 200px;\r\n        display: block;\r\n        padding: 0 20px;\r\n    }\r\n`","import React, { useState } from 'react';\r\n\r\nimport Stage from \"./Stage\";\r\nimport Display from \"./Display\";\r\nimport StartButton from \"./StartButton\";\r\n\r\nimport {usePlayer} from '../hooks/usePlayer';\r\nimport {useStage} from '../hooks/useStage';\r\nimport {useInterval} from '../hooks/useInterval';\r\nimport {useGameStatus} from '../hooks/useGameStatus';\r\nimport {createStage, checkCollision} from '../gameHelper';\r\n\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\nfunction Tetris() {\r\n\r\n    const [ dropTime, setDropTime ] = useState(null);\r\n    const [ gameOver, setGameOver ] = useState(false);\r\n\r\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n    console.log(\"re-render\");\r\n\r\n    const movePlayer = (dir) => {\r\n        if(!checkCollision(player, stage, { x:dir, y:0})){\r\n            updatePlayerPos({ x:dir, y: 0});\r\n        }\r\n    }\r\n\r\n    const startGame = () => {\r\n        setStage(createStage());\r\n        setDropTime(1000);\r\n        resetPlayer();\r\n        setGameOver(false);\r\n        setScore(0);\r\n        setRows(0);\r\n        setLevel(0);\r\n    }\r\n\r\n    const drop = () => {\r\n        if(rows > (level+1)*10){\r\n            setLevel(prev => prev+1);\r\n            setDropTime(1000/(level+1)+200);\r\n        }\r\n        if(!checkCollision(player, stage, { x:0, y:1})){\r\n            updatePlayerPos({x:0, y:1, collided: false});\r\n        } else {\r\n            if(player.pos.y<1){\r\n                console.log(\"GAME OVER!!\");\r\n                setGameOver(true);\r\n                setDropTime(null);\r\n            }\r\n            updatePlayerPos({x:0, y:0, collided: true});\r\n        }\r\n    }\r\n\r\n    const keyUp = ({ keyCode }) => {\r\n        if(!gameOver){\r\n            if(keyCode === 40){\r\n                setDropTime(1000/(level+1)+200);\r\n            }\r\n        }\r\n    }\r\n\r\n    const dropPlayer = () => {\r\n        setDropTime(null)\r\n        drop();\r\n    }\r\n\r\n    const move = ({ keyCode }) => {\r\n        if(!gameOver){\r\n            if(keyCode===37){\r\n                movePlayer(-1);\r\n            }\r\n            else if(keyCode===39){\r\n                movePlayer(1);\r\n            }\r\n            else if(keyCode===40){\r\n                dropPlayer();\r\n            }\r\n            else if(keyCode===38){\r\n                playerRotate(stage, 1);\r\n            }\r\n            else if(keyCode===13){\r\n                startGame();\r\n            }\r\n        }\r\n    }\r\n\r\n    useInterval(() => {\r\n        drop();\r\n    }, dropTime);\r\n\r\n    return (\r\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={event => move(event)} onKeyUp={keyUp} >\r\n            <StyledTetris>\r\n                <Stage stage={stage} />\r\n                <aside>\r\n                    <h1 style={{color: \"white\", textAlign: \"center\", fontSize: \"2rem\"}}>TETRIS</h1>\r\n                    {gameOver ? (<Display gameOver={gameOver} text=\"Game Over\" />) :\r\n                        (<div>\r\n                            <Display text={`Score: ${score}`} />\r\n                            <Display text={`Rows: ${rows}`} />\r\n                            <Display text={`Level: ${level}`} />\r\n                        </div>)\r\n                    }\r\n                    <StartButton callback={startGame} />\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    )\r\n}\r\n\r\nexport default Tetris\r\n","import { useState, useCallback } from 'react';\r\nimport { STAGE_WIDTH, checkCollision } from \"../gameHelper\";\r\nimport { randomTetromino, TETROMINOS } from '../tetrominos';\r\n\r\nexport const usePlayer =() => {\r\n    const [ player, setPlayer ] = useState({\r\n        pos: { x: 0, y: 0 },\r\n        tetromino: TETROMINOS[0].shape,\r\n        collided: false\r\n    });\r\n\r\n    const rotate = (matrix, dir) => {\r\n        const rotatedTetro = matrix.map((_, index) =>\r\n            matrix.map(col => col[index])\r\n        );\r\n        if(dir > 0){\r\n            return rotatedTetro.map( row => row.reverse());\r\n        }\r\n        return rotatedTetro.reverse();\r\n    }\r\n\r\n    const playerRotate = (stage, dir) => {\r\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n        const pos= clonedPlayer.pos.x;\r\n        let offset=1;\r\n        while(checkCollision(clonedPlayer, stage, {x:0,y:0})){\r\n            clonedPlayer.pos.x += offset;\r\n            offset = -(offset + (offset > 0 ? 1 : -1));\r\n            if(offset > clonedPlayer.tetromino[0].length){\r\n                rotate(clonedPlayer.tetromino, -dir);\r\n                clonedPlayer.pos.x = pos;\r\n                return;\r\n            }\r\n        }\r\n\r\n        setPlayer(clonedPlayer);\r\n    }\r\n\r\n    const updatePlayerPos=({x,y,collided}) => {\r\n        setPlayer(prev => ({\r\n            ...prev,\r\n            pos: { x: (prev.pos.x + x), y: (prev.pos.y + y)},\r\n            collided,\r\n        }))\r\n    }\r\n\r\n    const resetPlayer = useCallback(\r\n        () => {\r\n            setPlayer({\r\n                pos: { x: STAGE_WIDTH/2 - 2, y:0 },\r\n                tetromino: randomTetromino().shape,\r\n                collided: false,\r\n            })\r\n        },\r\n        [],\r\n    )\r\n\r\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from \"./components/Tetris\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Tetris />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}